# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master, feature/* ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
  
    - run: sudo curl -Lo /usr/local/bin/ecs-cli https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
    - run: sudo chmod +x "/usr/local/bin/ecs-cli"
    - run: echo "::add-path::/usr/local/bin/ecs-cli"
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-  
          
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Test
      run: ls src/main/resources

    - name: upload image to ECR
      uses: kciter/aws-ecr-action@v1
      with:
        access_key_id: ${{ secrets.aws_access_key_id }}
        secret_access_key: ${{ secrets.aws_secret_access_key }}
        account_id: ${{ secrets.account_id }}
        repo: nro/interview-api
        region: eu-west-3
        dockerfile: ./src/main/docker/Dockerfile.jvm
        path: .
  
    - run: ecs-cli configure profile --profile-name interview-api --access-key ${{ secrets.aws_access_key_id }} --secret-key ${{ secrets.aws_secret_access_key }} 
  
    - uses: bluwy/substitute-string-action@v1
      id: sub
      with:
        _input-file: './src/main/docker/docker-compose.yml'
        _format-key: '%%key%%'
        _output-file: './src/main/docker/docker-compose-gen.yml'
        ds_url: ${{ secrets.DS_URL }}
        ds_username: ${{ secrets.DS_USERNAME }}
        ds_password: ${{ secrets.DS_PASSWORD }}
        log_level: ${{ secrets.LOG_LEVEL }}
        log_console_level: ${{ secrets.LOG_CONSOLE_LEVEL }}
        db_name: ${{ secrets.DB_NAME }}
        mail_password: ${{ secrets.MAIL_PASSWORD}}

    - name: Deploy ecs
      run: sudo ecs-cli compose --region eu-west-3 --ecs-profile interview-api --project-name interview-ui --cluster {{ secrets.AWS_ECS_CLUSTER }} -f ./src/main/docker/docker-compose-gen.yml up
        
    
